ccxt==4.1.15
pandas==2.1.0
numpy==1.24.3
aiohttp==3.8.5
TA-Lib==0.4.25
sqlalchemy==2.0.20
psycopg2-binary==2.9.7
requests==2.31.0
python-dotenv==1.0.0
scikit-learn==1.3.0
plotly==5.15.0
discord-webhook==1.3.0
pytest==7.4.0
pytest-asyncio==0.21.1
python-dateutil==2.8.2
pytz==2023.3
EOF

# ============================================================================
# Crypto Trading Bot - Complete Dependencies
# ============================================================================

# ============================================================================
# Core Trading Dependencies
# ============================================================================

# Cryptocurrency Exchange Connector
ccxt==4.1.15

# Data Analysis and Manipulation
pandas==2.1.4
numpy==1.24.4

# Async HTTP Client
aiohttp==3.9.1
asyncio-throttle==1.0.2

# ============================================================================
# Technical Analysis
# ============================================================================

# Technical Analysis Library
TA-Lib==0.4.28

# Additional Technical Indicators
pandas-ta==0.3.14b0

# Financial Data Processing
yfinance==0.2.28

# ============================================================================
# Database
# ============================================================================

# SQLAlchemy ORM
sqlalchemy==2.0.23
alembic==1.13.1

# Database Drivers
# SQLite (built-in)
psycopg2-binary==2.9.9    # PostgreSQL
PyMySQL==1.1.0            # MySQL (alternative)

# ============================================================================
# API & HTTP
# ============================================================================

# HTTP Requests
requests==2.31.0
httpx==0.25.2

# Environment Variables
python-dotenv==1.0.0

# JSON Web Tokens (if needed)
PyJWT==2.8.0

# ============================================================================
# AI & Machine Learning
# ============================================================================

# Anthropic Claude API
anthropic==0.7.8

# Machine Learning
scikit-learn==1.3.2
scipy==1.11.4

# Natural Language Processing (if needed)
nltk==3.8.1

# ============================================================================
# Data Visualization & Monitoring
# ============================================================================

# Plotting
plotly==5.17.0
matplotlib==3.8.2
seaborn==0.13.0

# Web Dashboard (optional)
streamlit==1.28.2
dash==2.14.2

# ============================================================================
# Notifications
# ============================================================================

# Discord Webhooks
discord-webhook==1.3.0
discord.py==2.3.2

# Telegram Bot
python-telegram-bot==20.7

# Email Notifications
smtplib-ssl==1.0.0

# ============================================================================
# Utilities & Tools
# ============================================================================

# Date/Time Handling
python-dateutil==2.8.2
pytz==2023.3

# Configuration Management
pydantic==2.5.2
pydantic-settings==2.1.0

# Logging
loguru==0.7.2

# Progress Bars
tqdm==4.66.1

# File Handling
openpyxl==3.1.2          # Excel files
xlsxwriter==3.1.9        # Excel writing

# ============================================================================
# Development & Testing
# ============================================================================

# Testing Framework
pytest==7.4.3
pytest-asyncio==0.21.1
pytest-cov==4.1.0
pytest-mock==3.12.0

# Code Quality
black==23.11.0           # Code formatter
flake8==6.1.0           # Linting
isort==5.12.0           # Import sorting
mypy==1.7.1             # Type checking

# Documentation
sphinx==7.2.6
sphinx-rtd-theme==1.3.0

# ============================================================================
# Performance & Monitoring
# ============================================================================

# Memory Profiling
psutil==5.9.6
memory-profiler==0.61.0

# Performance Monitoring
prometheus-client==0.19.0

# Caching
redis==5.0.1
python-memcached==1.59

# ============================================================================
# Security & Encryption
# ============================================================================

# Encryption
cryptography==41.0.8
bcrypt==4.1.2

# Secure Random
secrets==3.3.0

# ============================================================================
# Deployment & Production
# ============================================================================

# WSGI Server
gunicorn==21.2.0

# Process Management
supervisor==4.2.5

# Docker Integration
docker==6.1.3

# ============================================================================
# Data Processing & IO
# ============================================================================

# CSV Processing
csv==1.0

# JSON Processing
ujson==5.8.0

# File Compression
gzip==1.0
zipfile36==0.1.3

# ============================================================================
# Networking & Protocols
# ============================================================================

# WebSocket Client
websockets==12.0

# SSH Client (for deployment)
paramiko==3.4.0

# ============================================================================
# Mathematical & Statistical
# ============================================================================

# Statistical Analysis
statsmodels==0.14.0

# Optimization
cvxpy==1.4.1

# ============================================================================
# Alternative/Optional Dependencies
# ============================================================================

# Alternative Technical Analysis (choose one)
# ta==0.10.2
# finta==1.3

# Alternative HTTP Client (choose one)
# urllib3==2.1.0

# Alternative Async Framework (if not using asyncio)
# tornado==6.4

# Alternative Database ORM (if not using SQLAlchemy)
# peewee==3.17.0

# ============================================================================
# Platform-specific Dependencies
# ============================================================================

# Windows-specific
pywin32==306; sys_platform == "win32"

# Linux-specific utilities
python-crontab==3.0.0; sys_platform == "linux"

# ============================================================================
# Version Constraints & Compatibility
# ============================================================================

# Python version requirement (in setup.py or pyproject.toml)
# python_requires = ">=3.8,<3.12"

# Pin critical versions to avoid breaking changes
setuptools>=65.0.0
wheel>=0.38.0
pip>=22.0.0

# ============================================================================
# Development Environment Setup
# ============================================================================

# Virtual Environment
virtualenv==20.24.7
pipenv==2023.11.15       # Alternative to venv

# Jupyter Notebook (for analysis)
jupyter==1.0.0
notebook==7.0.6
ipykernel==6.27.1

# ============================================================================
# Optional: GPU Acceleration (if using ML models)
# ============================================================================

# Uncomment if using GPU-accelerated computing
# tensorflow==2.15.0
# torch==2.1.1
# cupy-cuda11x==12.3.0

# ============================================================================
# Installation Notes:
# ============================================================================

# 1. TA-Lib requires system dependencies:
#    - Ubuntu/Debian: sudo apt-get install build-essential
#    - macOS: brew install ta-lib
#    - Windows: Download from https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib

# 2. For PostgreSQL support:
#    - Install PostgreSQL development headers
#    - Ubuntu/Debian: sudo apt-get install libpq-dev
#    - macOS: brew install postgresql

# 3. For better performance, consider:
#    - Using conda instead of pip for scientific packages
#    - Installing numpy/pandas from conda-forge channel

# 4. Production deployment:
#    - Pin all versions for reproducible builds
#    - Use requirements-prod.txt with locked versions
#    - Consider using pip-tools for dependency management

# ============================================================================
# Alternative Installation Methods:
# ============================================================================

# Using conda (recommended for scientific packages):
# conda create -n trading-bot python=3.10
# conda activate trading-bot
# conda install -c conda-forge pandas numpy scikit-learn ta-lib
# pip install -r requirements.txt

# Using Poetry (modern dependency management):
# poetry init
# poetry add pandas numpy ccxt sqlalchemy
# poetry install

# Using pipenv:
# pipenv install -r requirements.txt
# pipenv shell

# ============================================================================
# Docker Dependencies (if using containers):
# ============================================================================

# Add these to Dockerfile:
# RUN apt-get update && apt-get install -y \
#     build-essential \
#     libpq-dev \
#     libta-lib-dev \
#     && rm -rf /var/lib/apt/lists/*